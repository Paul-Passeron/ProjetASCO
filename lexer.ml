# 1 "lexer.mll"
 

open Parser

let keyword_table = Hashtbl.create 53
let _ =
    List.iter (fun (kwd, tok) -> Hashtbl.add keyword_table kwd tok)
    [
      "number",   T_NUMBER;
      "string",   T_STRING;
      "boolean",  T_BOOLEAN;
      "if",       T_IF;
      "else",     T_ELSE;
      "while",    T_WHILE;
      "return",   T_RETURN;
      "let",      T_LET;
      "var",      T_VAR;
      "const",    T_CONST;
      "function", T_FUNCTION;
      "typeof",   T_TYPEOF;
      "type",     T_TYPE;
      "true",     T_BOOL_LIT true;
      "false",    T_BOOL_LIT false;
    ]

let token_of_word = fun w ->
  try Hashtbl.find keyword_table w
  with Not_found -> T_IDENTIFIER w

# 32 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\218\255\002\000\053\000\080\000\104\000\213\000\025\000\
    \003\000\035\000\066\000\077\000\097\000\240\255\241\255\242\255\
    \243\255\244\255\245\255\246\255\247\255\016\000\249\255\250\255\
    \032\001\252\255\005\000\099\000\100\000\001\000\255\255\120\000\
    \121\000\254\255\177\000\042\001\075\001\097\001\187\000\197\000\
    \228\255\225\255\236\255\234\255\082\000\231\255\083\000\230\255\
    \229\255\109\001\099\000\131\001\169\001\192\001\247\001\014\002\
    \069\002\116\000\123\000\221\255\112\000\167\000\220\255\016\001\
    \017\001\076\001";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\032\000\032\000\031\000\255\255\
    \029\000\028\000\020\000\018\000\016\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\007\000\255\255\255\255\
    \004\000\255\255\002\000\017\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\033\000\033\000\033\000\255\255\033\000\
    \255\255\255\255\255\255\255\255\022\000\255\255\023\000\255\255\
    \255\255\032\000\255\255\255\255\255\255\032\000\032\000\032\000\
    \032\000\032\000\032\000\255\255\255\255\034\000\255\255\255\255\
    \255\255\035\000";
  Lexing.lex_default =
   "\255\255\000\000\063\000\003\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \255\255\000\000\255\255\255\255\028\000\029\000\000\000\031\000\
    \031\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\003\000\003\000\000\000\063\000\
    \063\000\063\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\026\000\026\000\030\000\000\000\026\000\026\000\026\000\
    \000\000\000\000\026\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \026\000\008\000\002\000\000\000\062\000\026\000\007\000\003\000\
    \020\000\019\000\012\000\014\000\025\000\013\000\024\000\027\000\
    \005\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\023\000\022\000\011\000\009\000\010\000\048\000\
    \046\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\016\000\059\000\015\000\064\000\006\000\
    \044\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\018\000\021\000\017\000\036\000\043\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\042\000\041\000\040\000\028\000\031\000\045\000\
    \047\000\060\000\029\000\057\000\057\000\034\000\036\000\061\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\032\000\032\000\057\000\057\000\000\000\255\255\
    \033\000\000\000\050\000\057\000\057\000\034\000\000\000\049\000\
    \000\000\000\000\000\000\000\000\000\000\034\000\000\000\051\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \052\000\000\000\000\000\000\000\000\000\000\000\000\000\049\000\
    \000\000\000\000\050\000\000\000\060\000\034\000\059\000\000\000\
    \000\000\000\000\000\000\058\000\000\000\000\000\000\000\051\000\
    \000\000\000\000\000\000\000\000\038\000\000\000\038\000\000\000\
    \052\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\000\000\
    \001\000\030\000\255\255\060\000\000\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \000\000\000\000\062\000\065\000\006\000\255\255\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\255\255\034\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\064\000\064\000\062\000\034\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\000\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\034\000\000\000\000\000\
    \000\000\036\000\000\000\000\000\000\000\000\000\000\000\034\000\
    \034\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\036\000\000\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\255\255\
    \064\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \034\000\000\000\034\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\000\000\000\000\000\000\
    \039\000\000\000\000\000\000\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\034\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\000\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\053\000\053\000\053\000\053\000\053\000\053\000\000\000\
    \000\000\000\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\054\000\
    \000\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\000\000\000\000\000\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\056\000\000\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\029\000\255\255\000\000\026\000\026\000\
    \255\255\255\255\026\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\002\000\026\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\000\
    \008\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\000\000\002\000\000\000\
    \009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\004\000\010\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\011\000\012\000\021\000\027\000\028\000\044\000\
    \046\000\003\000\027\000\050\000\050\000\004\000\005\000\060\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\031\000\032\000\057\000\057\000\255\255\031\000\
    \032\000\255\255\005\000\058\000\058\000\005\000\255\255\004\000\
    \255\255\255\255\255\255\255\255\255\255\004\000\255\255\005\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \005\000\255\255\255\255\255\255\255\255\255\255\255\255\005\000\
    \255\255\255\255\005\000\255\255\060\000\005\000\061\000\255\255\
    \255\255\255\255\255\255\057\000\255\255\255\255\255\255\005\000\
    \255\255\255\255\255\255\255\255\034\000\255\255\034\000\255\255\
    \005\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\034\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\255\255\
    \000\000\029\000\002\000\061\000\255\255\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \255\255\255\255\063\000\064\000\006\000\003\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\035\000\028\000\024\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\063\000\064\000\065\000\035\000\
    \060\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \031\000\032\000\255\255\036\000\036\000\036\000\036\000\036\000\
    \036\000\036\000\036\000\036\000\036\000\024\000\255\255\255\255\
    \255\255\035\000\255\255\255\255\255\255\255\255\255\255\035\000\
    \036\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\037\000\037\000\049\000\255\255\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\061\000\
    \065\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \036\000\255\255\049\000\051\000\051\000\051\000\051\000\051\000\
    \051\000\051\000\051\000\051\000\051\000\255\255\255\255\255\255\
    \037\000\255\255\255\255\255\255\051\000\051\000\051\000\051\000\
    \051\000\051\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\049\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\255\255\051\000\051\000\051\000\051\000\
    \051\000\051\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\053\000\053\000\053\000\053\000\053\000\053\000\255\255\
    \255\255\255\255\052\000\052\000\052\000\052\000\052\000\052\000\
    \063\000\064\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\053\000\
    \255\255\053\000\053\000\053\000\053\000\053\000\053\000\054\000\
    \054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
    \054\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \054\000\054\000\054\000\054\000\054\000\054\000\055\000\055\000\
    \055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
    \255\255\255\255\255\255\255\255\065\000\255\255\255\255\055\000\
    \055\000\055\000\055\000\055\000\055\000\255\255\255\255\255\255\
    \054\000\054\000\054\000\054\000\054\000\054\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\055\000\255\255\055\000\
    \055\000\055\000\055\000\055\000\055\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\056\000\056\000\
    \056\000\056\000\056\000\056\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\056\000\056\000\
    \056\000\056\000\056\000\056\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 42 "lexer.mll"
                          ( token lexbuf )
# 297 "lexer.ml"

  | 1 ->
# 43 "lexer.mll"
                          ( token lexbuf )
# 302 "lexer.ml"

  | 2 ->
# 44 "lexer.mll"
                          ( token lexbuf )
# 307 "lexer.ml"

  | 3 ->
# 45 "lexer.mll"
                          ( T_COMMA )
# 312 "lexer.ml"

  | 4 ->
# 46 "lexer.mll"
                          ( T_DOT )
# 317 "lexer.ml"

  | 5 ->
# 47 "lexer.mll"
                          ( T_COLON )
# 322 "lexer.ml"

  | 6 ->
# 48 "lexer.mll"
                          ( T_SEMICOLON )
# 327 "lexer.ml"

  | 7 ->
# 49 "lexer.mll"
                          ( T_BAR )
# 332 "lexer.ml"

  | 8 ->
# 50 "lexer.mll"
                          ( T_OPEN_PAR )
# 337 "lexer.ml"

  | 9 ->
# 51 "lexer.mll"
                          ( T_CLOSE_PAR )
# 342 "lexer.ml"

  | 10 ->
# 52 "lexer.mll"
                          ( T_OPEN_BRA )
# 347 "lexer.ml"

  | 11 ->
# 53 "lexer.mll"
                          ( T_CLOSE_BRA )
# 352 "lexer.ml"

  | 12 ->
# 54 "lexer.mll"
                          ( T_OPEN_SQR )
# 357 "lexer.ml"

  | 13 ->
# 55 "lexer.mll"
                          ( T_CLOSE_SQR )
# 362 "lexer.ml"

  | 14 ->
# 56 "lexer.mll"
                          ( T_PLUS )
# 367 "lexer.ml"

  | 15 ->
# 57 "lexer.mll"
                          ( T_MINUS )
# 372 "lexer.ml"

  | 16 ->
# 58 "lexer.mll"
                          ( T_MUL )
# 377 "lexer.ml"

  | 17 ->
# 59 "lexer.mll"
                          ( T_DIV )
# 382 "lexer.ml"

  | 18 ->
# 60 "lexer.mll"
                          ( T_LT )
# 387 "lexer.ml"

  | 19 ->
# 61 "lexer.mll"
                          ( T_LEQ )
# 392 "lexer.ml"

  | 20 ->
# 62 "lexer.mll"
                          ( T_GT )
# 397 "lexer.ml"

  | 21 ->
# 63 "lexer.mll"
                          ( T_GEQ )
# 402 "lexer.ml"

  | 22 ->
# 64 "lexer.mll"
                          ( T_EQ )
# 407 "lexer.ml"

  | 23 ->
# 65 "lexer.mll"
                          ( T_DIFF )
# 412 "lexer.ml"

  | 24 ->
# 66 "lexer.mll"
                          ( T_EQQ )
# 417 "lexer.ml"

  | 25 ->
# 67 "lexer.mll"
                          ( T_NEQQ )
# 422 "lexer.ml"

  | 26 ->
# 68 "lexer.mll"
                          ( T_AND )
# 427 "lexer.ml"

  | 27 ->
# 69 "lexer.mll"
                          ( T_OR )
# 432 "lexer.ml"

  | 28 ->
# 70 "lexer.mll"
                          ( T_ASSIGN )
# 437 "lexer.ml"

  | 29 ->
# 71 "lexer.mll"
                          ( T_NOT )
# 442 "lexer.ml"

  | 30 ->
# 72 "lexer.mll"
                          ( T_POW )
# 447 "lexer.ml"

  | 31 ->
let
# 73 "lexer.mll"
                 lexeme
# 453 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 73 "lexer.mll"
                          ( token_of_word lexeme )
# 457 "lexer.ml"

  | 32 ->
let
# 77 "lexer.mll"
                 lexeme
# 463 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 77 "lexer.mll"
                          ( T_INT_LIT (int_of_string lexeme) )
# 467 "lexer.ml"

  | 33 ->
let
# 78 "lexer.mll"
                   lexeme
# 473 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 78 "lexer.mll"
                          ( T_FLOAT_LIT (float_of_string lexeme) )
# 477 "lexer.ml"

  | 34 ->
let
# 79 "lexer.mll"
                                                                     lexeme
# 483 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 79 "lexer.mll"
                                                                               ( let l = String.length lexeme in T_STR_LIT (String.sub lexeme 1 (l-2)) )
# 487 "lexer.ml"

  | 35 ->
let
# 80 "lexer.mll"
                                                                    lexeme
# 493 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 80 "lexer.mll"
                                                                              ( let l = String.length lexeme in T_STR_LIT (String.sub lexeme 1 (l-2)) )
# 497 "lexer.ml"

  | 36 ->
# 81 "lexer.mll"
           ( T_STR_LIT "" )
# 502 "lexer.ml"

  | 37 ->
# 83 "lexer.mll"
                          ( EOF )
# 507 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

